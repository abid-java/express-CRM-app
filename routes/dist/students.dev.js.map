{"version":3,"sources":["students.js"],"names":["express","require","router","Router","StudentModel","get","request","response","next","send","post","console","log","student","firstName","body","lastName","age","dob","department","successResponse","save","error","id","_id","students","find","studentsResponse","JSON","stringify","forEach","dbStudent","push","status","data","resultsFound","length","fName","query","reqParam","filterObject","remove","deleteObj","module","exports"],"mappings":"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","sourcesContent":["/*jshint esversion: 6 */\r\n\r\nvar express = require('express');\r\nvar router = express.Router();\r\n// var mongoose = require('mongoose');\r\nvar StudentModel = require('../models/student.model');\r\n\r\n/* GET students listing. */\r\nrouter.get('/', function (request, response, next) {\r\n  response.send('students route activated');\r\n});\r\n\r\n/* POST students */\r\nrouter.post('/create', function (request, response, next) {\r\n  console.log(\"Request Body : \", request);\r\n  let student = new StudentModel({\r\n    firstName: request.body.firstName,\r\n    lastName: request.body.lastName,\r\n    age: request.body.age,\r\n    dob: request.body.dob,\r\n    department: request.body.department\r\n  })\r\n\r\n  var successResponse = {\r\n    \"status\": 200,\r\n    \"description\": \"Student Created Successfully\",\r\n  };\r\n\r\n  student.save((error, student) => {\r\n    if (error) {\r\n      response.send(error);\r\n    } else {\r\n      console.log(\"<======= Overriding existing student_id with one freshly saved =======>\")\r\n      successResponse.id = student._id;\r\n      response.send(successResponse);\r\n    }\r\n  });\r\n});\r\n\r\n/* LIST students */\r\nrouter.get('/list', function (request, response, next) {\r\n  var students = [];\r\n  let student = {};\r\n  StudentModel.find((error, studentsResponse) => {\r\n    if (error) {\r\n      response.send(error);\r\n    } else {\r\n      console.log(\"<======= Students - Start =======>\");\r\n      console.log(JSON.stringify(studentsResponse));\r\n      console.log(\"<======= Students - End =======>\");\r\n      studentsResponse.forEach(dbStudent => {\r\n        student = new StudentModel({\r\n          firstName: dbStudent.firstName,\r\n          lastName: dbStudent.lastName,\r\n          age: dbStudent.age,\r\n          dob: dbStudent.dob,\r\n          department: dbStudent.department\r\n        })\r\n        students.push(student);\r\n      });\r\n      response.send({\r\n        status: 200,\r\n        data: students,\r\n        resultsFound: students.length});\r\n    }\r\n  });\r\n});\r\n\r\n/* GET students listing. */\r\nrouter.get('/searchByName', function (request, response, next) {\r\n  var students = [];\r\n  let student = {};\r\n  const fName = request.query.firstName;\r\n  StudentModel.find({ firstName: fName }, (error, studentsResponse) => {\r\n    if (error) {\r\n      response.send(error)\r\n    } else {\r\n      console.log(\"<======= Students - Start =======>\");\r\n      console.log(JSON.stringify(studentsResponse));\r\n      console.log(\"<======= Students - End =======>\");\r\n      studentsResponse.forEach(dbStudent => {\r\n        student = new StudentModel({\r\n          firstName: dbStudent.firstName,\r\n          lastName: dbStudent.lastName,\r\n          age: dbStudent.age,\r\n          dob: dbStudent.dob,\r\n          department: dbStudent.department\r\n        })\r\n        students.push(student);\r\n      });\r\n      response.send({\r\n        status: 200,\r\n        data: students,\r\n        resultsFound: students.length\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\n/* PUT students */\r\n/*router.put('/update', function (request, response, next) {\r\n  console.log(\"Request Body : \", request.body);\r\n  var filterObject = {age: 28};\r\n  var successResponse = {\r\n    \"status\": 200,\r\n    \"description\": \"Student Updated Successfully\",\r\n  };\r\n  let student = new StudentModel();\r\n  if(request && request.body) {\r\n    if(request.body.firstName) {\r\n      student.firstName = request.body.firstName;\r\n    }\r\n    if(request.body.lastName) {\r\n      student.lastName = request.body.lastName;\r\n    }\r\n    if(request.body.age) {\r\n      student.age = request.body.age;\r\n    }\r\n    if(request.body.dob) {\r\n      student.dob = request.body.dob;\r\n    }\r\n    if(request.body.department) {\r\n      student.department = request.body.department;\r\n    }\r\n  }\r\n  StudentModel.findOneAndUpdate(filterObject, student , (error, updatedStudent) => {\r\n    if (error) {\r\n      response.send(error);\r\n    } else {\r\n      successResponse.id = updatedStudent._id;\r\n      response.send(successResponse);\r\n    }\r\n  });\r\n});*/\r\n\r\n/* DELETE student */\r\nrouter.delete('/delete', (request, response, next) => {\r\n  const reqParam = request.query.age;\r\n  var filterObject = {age: reqParam};\r\n  var successResponse = {\r\n    \"status\": 200,\r\n    \"description\": \"Student deleted Successfully\",\r\n  };\r\n\r\n  StudentModel.remove(filterObject, (error, deleteObj) => {\r\n    if(error) {\r\n      response.send(error);\r\n    } else {\r\n      // successResponse.id = deleteObj._id;\r\n      response.send(deleteObj);\r\n    }\r\n  });\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"students.dev.js"}