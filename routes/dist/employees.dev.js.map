{"version":3,"sources":["employees.js"],"names":["express","require","router","Router","mysqlconnection","get","request","response","next","employees","resultArray","GET_ALL_EMPLOYEES","query","error","result","console","log","send","Object","values","JSON","parse","stringify","forEach","emp","employee","employeeId","EMPLOYEE_ID","firstName","FIRST_NAME","lastname","LAST_NAME","contact","PHONE_NUMBER","email","EMAIL","dateofjoining","HIRE_DATE","push","status","data","resultsFound","length","GET_EMPLOYEE","params","empid","module","exports"],"mappings":";;AAAA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;;AACA,IAAIC,eAAe,GAAGH,OAAO,CAAC,cAAD,CAA7B;;AAEAC,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgB,UAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA6B;AACzC,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,iBAAiB,GAAG,gCAAxB;AACAP,EAAAA,eAAe,CAACQ,KAAhB,CAAsBD,iBAAtB,EAAyC,UAACE,KAAD,EAAQC,MAAR,EAAmB;AACxD,QAAGD,KAAH,EAAU;AACNE,MAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;AACAT,MAAAA,QAAQ,CAACU,IAAT,CAAcJ,KAAd;AACH,KAHD,MAGO;AACHH,MAAAA,WAAW,GAAGQ,MAAM,CAACC,MAAP,CAAcC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,MAAf,CAAX,CAAd,CAAd;AACAJ,MAAAA,WAAW,CAACa,OAAZ,CAAoB,UAAAC,GAAG,EAAI;AACvB,YAAIC,QAAQ,GAAG,EAAf;AACAA,QAAAA,QAAQ,CAACC,UAAT,GAAsBF,GAAG,CAACG,WAA1B;AACAF,QAAAA,QAAQ,CAACG,SAAT,GAAqBJ,GAAG,CAACK,UAAzB;AACAJ,QAAAA,QAAQ,CAACK,QAAT,GAAoBN,GAAG,CAACO,SAAxB;AACAN,QAAAA,QAAQ,CAACO,OAAT,GAAmBR,GAAG,CAACS,YAAvB;AACAR,QAAAA,QAAQ,CAACS,KAAT,GAAiBV,GAAG,CAACW,KAArB;AACAV,QAAAA,QAAQ,CAACW,aAAT,GAAyBZ,GAAG,CAACa,SAA7B;AACA5B,QAAAA,SAAS,CAAC6B,IAAV,CAAeb,QAAf;AACH,OATD;AAUAlB,MAAAA,QAAQ,CAACU,IAAT,CAAc;AACVsB,QAAAA,MAAM,EAAE,GADE;AAEVC,QAAAA,IAAI,EAAE/B,SAFI;AAGVgC,QAAAA,YAAY,EAAEhC,SAAS,CAACiC;AAHd,OAAd;AAKH;AACJ,GAtBD;AAuBH,CA3BD;AA6BAxC,MAAM,CAACG,GAAP,CAAW,gBAAX,EAA6B,UAACC,OAAD,EAAUC,QAAV,EAAoBC,IAApB,EAA6B;AACtD,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIiC,YAAY,GAAG,wDAAsDrC,OAAO,CAACsC,MAAR,CAAeC,KAAxF;AACAzC,EAAAA,eAAe,CAACQ,KAAhB,CAAsB+B,YAAtB,EAAoC,UAAC9B,KAAD,EAAQC,MAAR,EAAmB;AACnD,QAAGD,KAAH,EAAU;AACNE,MAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;AACAT,MAAAA,QAAQ,CAACU,IAAT,CAAcJ,KAAd;AACH,KAHD,MAGO;AACHH,MAAAA,WAAW,GAAGQ,MAAM,CAACC,MAAP,CAAcC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,MAAf,CAAX,CAAd,CAAd;AACAJ,MAAAA,WAAW,CAACa,OAAZ,CAAoB,UAAAC,GAAG,EAAI;AACvB,YAAIC,QAAQ,GAAG,EAAf;AACAA,QAAAA,QAAQ,CAACC,UAAT,GAAsBF,GAAG,CAACG,WAA1B;AACAF,QAAAA,QAAQ,CAACG,SAAT,GAAqBJ,GAAG,CAACK,UAAzB;AACAJ,QAAAA,QAAQ,CAACK,QAAT,GAAoBN,GAAG,CAACO,SAAxB;AACAN,QAAAA,QAAQ,CAACO,OAAT,GAAmBR,GAAG,CAACS,YAAvB;AACAR,QAAAA,QAAQ,CAACS,KAAT,GAAiBV,GAAG,CAACW,KAArB;AACAV,QAAAA,QAAQ,CAACW,aAAT,GAAyBZ,GAAG,CAACa,SAA7B;AACA5B,QAAAA,SAAS,CAAC6B,IAAV,CAAeb,QAAf;AACH,OATD;AAUAlB,MAAAA,QAAQ,CAACU,IAAT,CAAc;AACVsB,QAAAA,MAAM,EAAE,GADE;AAEVC,QAAAA,IAAI,EAAE/B,SAFI;AAGVgC,QAAAA,YAAY,EAAEhC,SAAS,CAACiC;AAHd,OAAd;AAKH;AACJ,GAtBD;AAuBH,CA3BD;AA6BAI,MAAM,CAACC,OAAP,GAAiB7C,MAAjB","sourcesContent":["/*jshint esversion: 6 */\r\n\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar mysqlconnection = require('../db_config');\r\n\r\nrouter.get('/', (request, response, next) => {\r\n    var employees = [];\r\n    var resultArray = [];\r\n    var GET_ALL_EMPLOYEES = \"select * from sakila.employees\";\r\n    mysqlconnection.query(GET_ALL_EMPLOYEES, (error, result) => {\r\n        if(error) {\r\n            console.log(\"<============ Error while fetching data from DB ============>\");\r\n            response.send(error);\r\n        } else {\r\n            resultArray = Object.values(JSON.parse(JSON.stringify(result)))\r\n            resultArray.forEach(emp => {\r\n                var employee = {};\r\n                employee.employeeId = emp.EMPLOYEE_ID;\r\n                employee.firstName = emp.FIRST_NAME;\r\n                employee.lastname = emp.LAST_NAME;\r\n                employee.contact = emp.PHONE_NUMBER;\r\n                employee.email = emp.EMAIL;\r\n                employee.dateofjoining = emp.HIRE_DATE;\r\n                employees.push(employee);\r\n            });\r\n            response.send({\r\n                status: 200,\r\n                data: employees,\r\n                resultsFound: employees.length\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\nrouter.get('/search/:empid', (request, response, next) => {\r\n    var employees = [];\r\n    var resultArray = [];\r\n    var GET_EMPLOYEE = \"select * from sakila.employees where employee_id = \"+request.params.empid;\r\n    mysqlconnection.query(GET_EMPLOYEE, (error, result) => {\r\n        if(error) {\r\n            console.log(\"<============ Error while fetching data from DB ============>\");\r\n            response.send(error);\r\n        } else {\r\n            resultArray = Object.values(JSON.parse(JSON.stringify(result)))\r\n            resultArray.forEach(emp => {\r\n                var employee = {};\r\n                employee.employeeId = emp.EMPLOYEE_ID;\r\n                employee.firstName = emp.FIRST_NAME;\r\n                employee.lastname = emp.LAST_NAME;\r\n                employee.contact = emp.PHONE_NUMBER;\r\n                employee.email = emp.EMAIL;\r\n                employee.dateofjoining = emp.HIRE_DATE;\r\n                employees.push(employee);\r\n            });\r\n            response.send({\r\n                status: 200,\r\n                data: employees,\r\n                resultsFound: employees.length\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\nmodule.exports = router;"],"file":"employees.dev.js"}